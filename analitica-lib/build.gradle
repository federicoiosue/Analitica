apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'org.sonarqube'

group = 'com.github.federicoiosue'
version = project.VERSION_NAME

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    defaultConfig {
        minSdkVersion MIN_SDK
        targetSdkVersion TARGET_SDK
        versionName VERSION_NAME
        versionCode Integer.parseInt(VERSION_CODE)
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "version"
    productFlavors {
        googleAnalytics {}
        matomo {}
    }
//    publishNonDefault true
}

dependencies {
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'junit:junit:4.12'

    googleAnalyticsImplementation 'com.google.android.gms:play-services-analytics:17.0.0'
    matomoImplementation 'org.matomo.sdk:tracker:4.1.2'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

sonarqube {
    properties {
        property "sonar.projectName", "Analitica Library"
        property "sonar.projectKey", "analitica"
        property 'sonar.projectVersion', project.VERSION_NAME
        property "sonar.host.url", "http://localhost:9000"
        property 'sonar.sourceEncoding', 'UTF-8'
        property 'sonar.language', 'java'
    }
}